AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 resources

Parameters:
  Project:
    Description: Project name
    Type: String

Resources:
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group. Public access to WWW/SSH/MySQL
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 0.0.0.0/0
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  EC2Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cloudformation:DescribeStackResources
          - cloudformation:DescribeStackEvents
          - cloudformation:DescribeStacks
          - cloudformation:UpdateStack
          - cloudformation:CreateStack
          - cloudformation:DescribeStackResource
          - logs:*
          - ec2:*
          - codedeploy:*
          - s3:*
          - iam:*
          - ssm:GetParameters
          - ssm:GetParameter
          Resource: "*"
      PolicyName: EC2Policy
      Roles:
      - Ref: EC2Role
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: EC2Role
  Route53Access: 
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - route53:*
          Resource:
          - "*"
      PolicyName: Route53Access
      Roles:
      - Ref: EC2Role

Outputs:
  EC2SecurityGroup:
    Value: !Ref EC2SecurityGroup
    Export:
      Name: !Sub ${Project}-ec2-res-sg
  EC2InstanceProfile:
    Value: !Ref EC2InstanceProfile
    Export:
      Name: !Sub ${Project}-ec2-res-ip

